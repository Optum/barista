"use strict";(self.webpackChunkbarista_docs=self.webpackChunkbarista_docs||[]).push([[372],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(a),d=n,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return a?r.createElement(g,o(o({ref:t},p),{},{components:a})):r.createElement(g,o({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6777:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],l={id:"overview",title:"Barista Overview",sidebar_label:"Overview"},s=void 0,c={unversionedId:"overview",id:"overview",title:"Barista Overview",description:"Project Barista is a developer focused, cloud native, pure open source solution for open source license and vulnerability management.",source:"@site/docs/overview.md",sourceDirName:".",slug:"/overview",permalink:"/barista/docs/overview",tags:[],version:"current",frontMatter:{id:"overview",title:"Barista Overview",sidebar_label:"Overview"},sidebar:"someSidebar",next:{title:"setup-admin-tables",permalink:"/barista/docs/setup-admin-tables"}},p=[{value:"Join our growing community!",id:"join-our-growing-community",children:[],level:2},{value:"Project Credits",id:"project-credits",children:[],level:2},{value:"Sample Screen Shots",id:"sample-screen-shots",children:[{value:"Login Page",id:"login-page",children:[],level:3},{value:"Dashboard",id:"dashboard",children:[],level:3},{value:"Project Summary Licenses",id:"project-summary-licenses",children:[],level:3},{value:"Project Summary Vulnerabilities",id:"project-summary-vulnerabilities",children:[],level:3},{value:"Project Obligations",id:"project-obligations",children:[],level:3}],level:2}],u={toc:p};function m(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Project Barista is a developer focused, cloud native, pure open source solution for open source license and vulnerability management.  "),(0,i.kt)("p",null,"Project goals include but are not limited to:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"maintain a license inventory system of record per project/service/product for OSS consumption within an organization"),(0,i.kt)("li",{parentName:"ol"},"automate license impact analysis related to OSS consumption"),(0,i.kt)("li",{parentName:"ol"},"automate publisher attribution analysis related to OSS consumption"),(0,i.kt)("li",{parentName:"ol"},"automate OSS vulnerability scanning")),(0,i.kt)("p",null,"Barista allows a developer to set up their project for scanning from any Git compatible repo.  Once a scan is initiated, the project is processed as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The repo is cloned into a temporary directory.  All contents will be destroyed once processing is finished."),(0,i.kt)("li",{parentName:"ol"},"License scanning is initiated.  Barista currently supports the following technology stacks:",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Java using the Maven package manager"),(0,i.kt)("li",{parentName:"ol"},".Net using the NuGet package manager"),(0,i.kt)("li",{parentName:"ol"},"Node using the NPM package manager"),(0,i.kt)("li",{parentName:"ol"},"Python using the PIP package manager"),(0,i.kt)("li",{parentName:"ol"},"Go using the Go package manager")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Support for additional package managers are on the roadmap as the community evolves e.g. Gradle\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Each technology stack uses native tools to gather project dependencies with as much meta data as can be harvested e.g. license, publisher information and or the project's published URL")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Unsupported technology stacks can be scanned using the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nexB/scancode-toolkit"},"nexB/scancode-tool")," but results are not as comprehensive and performance is degraded.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"All project and dependency code is then run through the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jeremylong/DependencyCheck"},"OWASP Dependency Check tool")," to gather published vulnerability information.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"All discovered components are checked against the ",(0,i.kt)("a",{parentName:"p",href:"https://clearlydefined.io/"},"clearlydefined.io")," project to retrieve copyright and license attribution information.  Information retrieved from clearlydefined.io is cached locally by component and version to increase performance.  The attribution information is collected into a downloadable file available at the project level in the GUI.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Both license and vulnerability findings are then run through a set of  user defined business rules which allow categorization of findings into 1 of 3 categories:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Approved: ",(0,i.kt)("img",{parentName:"li",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-green-check.png",alt:"alt text"})),(0,i.kt)("li",{parentName:"ul"},"Warning:  ",(0,i.kt)("img",{parentName:"li",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-yellow-warning.png",alt:"alt text"})),(0,i.kt)("li",{parentName:"ul"},"Disapproved:  ",(0,i.kt)("img",{parentName:"li",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-red-stop.png",alt:"alt text"}))))),(0,i.kt)("h2",{id:"join-our-growing-community"},"Join our growing community!"),(0,i.kt)("p",null,"  Start with our ",(0,i.kt)("a",{parentName:"p",href:"local-dev-environment"},"developer documentation"),"."),(0,i.kt)("h2",{id:"project-credits"},"Project Credits"),(0,i.kt)("p",null,"  Please see ",(0,i.kt)("a",{parentName:"p",href:"barista-project-credits"},"our original project team"),"."),(0,i.kt)("h2",{id:"sample-screen-shots"},"Sample Screen Shots"),(0,i.kt)("h3",{id:"login-page"},"Login Page"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-login.png",alt:"alt text"})),(0,i.kt)("h3",{id:"dashboard"},"Dashboard"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-dashboard.png",alt:"alt text"})),(0,i.kt)("h3",{id:"project-summary-licenses"},"Project Summary Licenses"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-project-summary-license.png",alt:"alt text"})),(0,i.kt)("h3",{id:"project-summary-vulnerabilities"},"Project Summary Vulnerabilities"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-project-summary-vulnerability.png",alt:"alt text"})),(0,i.kt)("h3",{id:"project-obligations"},"Project Obligations"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/Optum/barista/raw/master/doc/images/barista-project-obligations.png",alt:"alt text"})))}m.isMDXComponent=!0}}]);