"use strict";(self.webpackChunkbarista_docs=self.webpackChunkbarista_docs||[]).push([[538],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4302:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"barista-on-docker",title:"Building and Running Barista using Docker",sidebar_label:"Demo Environment Setup"},l=void 0,u={unversionedId:"barista-on-docker",id:"barista-on-docker",title:"Building and Running Barista using Docker",description:"While you are free to buid and run Barista on your own, we find it easiest to use docker images to manage the process.  Using docker-compose, one can get a demo version of Barista up and running in a short time with very few customizations.",source:"@site/docs/barista-on-docker.md",sourceDirName:".",slug:"/barista-on-docker",permalink:"/barista/docs/barista-on-docker",tags:[],version:"current",frontMatter:{id:"barista-on-docker",title:"Building and Running Barista using Docker",sidebar_label:"Demo Environment Setup"},sidebar:"someSidebar",previous:{title:"Development Environment Setup",permalink:"/barista/docs/local-dev-environment"},next:{title:"System Architecture",permalink:"/barista/docs/architecture"}},c=[{value:"OK, lets get on with it...",id:"ok-lets-get-on-with-it",children:[{value:"Dependancies",id:"dependancies",children:[],level:3},{value:"Optional - skip this step unless you want to build from source",id:"optional---skip-this-step-unless-you-want-to-build-from-source",children:[],level:3},{value:"Customizations",id:"customizations",children:[],level:3},{value:"Run the program",id:"run-the-program",children:[],level:3},{value:"Get to know your new friend",id:"get-to-know-your-new-friend",children:[],level:3}],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"While you are free to buid and run Barista on your own, we find it easiest to use docker images to manage the process.  Using ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/"},"docker-compose"),", one can get a demo version of Barista up and running in a short time with very few customizations.\nThe compose configuration will build the application with docker and  run the 5 major components with a single command."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Postgres Database - stores the state of the application."),(0,o.kt)("li",{parentName:"ul"},"Redis Server - a queue and ephemeral store for inter-server communication."),(0,o.kt)("li",{parentName:"ul"},"barista-web - A web server (nginx) that presents the application to the user's browser and also performs as a reverse proxy for the browser to transact with the API server."),(0,o.kt)("li",{parentName:"ul"},"barista-api - The main processing to manage the state of the application and service the users."),(0,o.kt)("li",{parentName:"ul"},"barista-scan - The engine that takes care of scanning, building, and evaluating the software under test.")),(0,o.kt)("p",null,"While a deployment based on docker-compose is certainly viable for a small instance, it would be a very good idea to use a system like ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/"},"Kubernetes")," to to manage and schedule the containers.  This gives the administrator finer grained control over things like secrets, resources, and monitoring.  We have built out templates for ",(0,o.kt)("a",{parentName:"p",href:"https://www.okd.io/"},"Openshift OKD")," and ",(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm"),", contact the authors for more info."),(0,o.kt)("h2",{id:"ok-lets-get-on-with-it"},"OK, lets get on with it..."),(0,o.kt)("p",null,"This set of files are used to build the application with docker and to deploy the components via docker-compose.  Follow these steps to deploy the system in your environment."),(0,o.kt)("h3",{id:"dependancies"},"Dependancies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Download the code from github."),(0,o.kt)("p",{parentName:"li"}," ",(0,o.kt)("inlineCode",{parentName:"p"},"git clone https://github.com/optum/Barista.git"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Ensure ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/install/"},"docker")," is running on your workstation or server.  Docker version 19.0.3 or greater is preferred, but anything over 18 should work.  (but has not been tested)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Be aware that RHEL and CentOs and others may ship earlier versions of docker and not be viable"),(0,o.kt)("li",{parentName:"ul"},"Be aware that Fedora dropped support for docker and moved to podman, which is supposed to be compatible, but we have not tested it.  Your mileage may vary..."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Ensure ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"docker-compose")," is installed"))),(0,o.kt)("h3",{id:"optional---skip-this-step-unless-you-want-to-build-from-source"},"Optional - skip this step unless you want to build from source"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Run commands to replace some specific symlinks with actual files.  (only needed if you do not use the pre-built docker images)"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-cd",metastring:"barista;","barista;":!0},"rm -fr barista-scan/src/{models,services,shared} &&\ncp -r barista-api/src/{models,services,shared} barista-scan/src;\n")))),(0,o.kt)("h3",{id:"customizations"},"Customizations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"check the settings in the file barista-compose.env .  Make modifications as necessary.  (Things like SMTP server, usernames and passwords for internal Git servers, personal access token for public github server if private repos are in play)")),(0,o.kt)("h3",{id:"run-the-program"},"Run the program"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Start the program using docker-compose, wait about 3 minutes for initialization (or watch the logs), then seed with basic data if you wish..")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      docker-compose up -d redis database ;  # let the database initialize the first time you run this...\n      sleep 30 ;                             # wait 30 seconds\n      docker-compose up -d ;                 # start the rest of the modules...\n")),(0,o.kt)("h3",{id:"get-to-know-your-new-friend"},"Get to know your new friend"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Point your browser to ","[http://your_servername/signin]"," (default username is Admin, password is $barista@admin, all case sensitive)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'Add a project and initiate a scan.  There should be some projects already defined under "Organization", and you can easily add more using the plus button.  (See the ',(0,o.kt)("a",{parentName:"p",href:"https://optum.github.io/barista/docs/overview"},"documentation")," for more info)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"When the scan module is first run, it downloads and installs pythons version 2.7 and 3.7.5 into virtual environments.   This takes a few (like 5) minutes so if you have python projects to scan, ensure this is complete.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'You can watch container logs using "docker logs" command, or use\n',(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose logs [-f] [--tail=xxx] [component...]"),"  (where component is one or more of barista-api, barista-scan, barista-web, database, redis)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'You can "reset to factory defaults" with the following command, which stops all containers and deletes the volumes'),(0,o.kt)("p",{parentName:"li"}," ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose down -v")))))}d.isMDXComponent=!0}}]);