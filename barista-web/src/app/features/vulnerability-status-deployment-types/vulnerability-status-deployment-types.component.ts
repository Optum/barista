import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';
import { Router } from '@angular/router';
import { VulnerabilityStatusDeploymentTypeApiService } from '@app/shared/api';
import { ComponentWithMessage } from '@app/shared/app-components/ComponentWithMessage';
import { AppDatatableComponent } from '@app/shared/app-components/datatable/app-datatable.component';
import { Observable } from 'rxjs';

@Component({
  selector: 'app-vulnerability-status-deployment-types',
  templateUrl: './vulnerability-status-deployment-types.component.html',
  styleUrls: ['./vulnerability-status-deployment-types.component.scss'],
})
export class VulnerabilityStatusDeploymentTypesComponent extends ComponentWithMessage implements OnInit, OnDestroy {
  constructor(private service: VulnerabilityStatusDeploymentTypeApiService, private router: Router) {
    super();
  }

  columns = [];
  @ViewChild('datatableComponent', { static: false }) datatableComponent: AppDatatableComponent;
  @ViewChild('removeRelationTemplate', { static: true }) removeRelationTemplate;
  selected = [];

  getPagedResults(query: any): Observable<any> {
    return this.service.vulnerabilityStatusDeploymentTypeGet(
      query.fields,
      query.filter,
      query.or,
      query.sort,
      query.join,
      query.perPage,
      query.offset,
      query.page,
      query.cache,
    );
  }

  ngOnDestroy(): void {}

  ngOnInit() {
    this.columns = [
      {
        flexGrow: 1,
        name: 'Id',
        prop: 'id',
      },
      {
        flexGrow: 1,
        name: 'Deployment Type',
        prop: 'deploymentType.description',
      },
      {
        flexGrow: 1,
        name: 'Security Scan Status',
        prop: 'securityStatus.description',
      },
      {
        flexGrow: 1,
        name: 'Security Status',
        prop: 'projectScanStatus.description',
      },
      {
        flexGrow: 0.5,
        name: '#',
        cellTemplate: this.removeRelationTemplate,
      },
    ];
  }

  async onDeleteRelation(event, { id }) {
    if (!confirm('Are you sure?')) {
      return;
    }

    const res = await this.service.vulnerabilityStatusDeploymentTypeIdDelete(+id).toPromise();
    if (!res) {
      this.datatableComponent.refresh();
      this.showMessage('Relation successfully deleted.');
    } else {
      this.showMessage('ERROR: ' + res);
    }
  }

  onEditRelation(event, { id }) {
    return this.router.navigate(['vulnerability-status-deployment-type', id]);
  }

  onSelect() {}
}
